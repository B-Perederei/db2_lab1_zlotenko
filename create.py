import psycopg2
import configparser

config = configparser.ConfigParser()
config.read('settings.ini')
conn_config = config['connection']

conn = psycopg2.connect(dbname=conn_config['dbname'],
						user=conn_config['user'],
						password=conn_config['password'],
						host=conn_config['host'])

with conn:
	with conn.cursor() as cur:
		create_table_query = '''CREATE TABLE IF NOT EXISTS public.zno_results
								(
								    outid character varying(64) COLLATE pg_catalog."default" NOT NULL,
								    birth integer,
								    sextypename character varying(64) COLLATE pg_catalog."default",
								    regname character varying(64) COLLATE pg_catalog."default",
								    areaname character varying(128) COLLATE pg_catalog."default",
								    tername character varying(128) COLLATE pg_catalog."default",
								    regtypename character varying(128) COLLATE pg_catalog."default",
								    eoname character varying(255) COLLATE pg_catalog."default",
								    eotypename character varying(128) COLLATE pg_catalog."default",
								    eoregname character varying(128) COLLATE pg_catalog."default",
								    eoareaname character varying(128) COLLATE pg_catalog."default",
								    eotername character varying(128) COLLATE pg_catalog."default",
								    eoparent character varying(255) COLLATE pg_catalog."default",
								    umltest character varying(64) COLLATE pg_catalog."default",
								    umlteststatus character varying(64) COLLATE pg_catalog."default",
								    umlball100 integer,
								    umlball12 integer,
								    umlptname character varying(255) COLLATE pg_catalog."default",
								    umlptregname character varying(128) COLLATE pg_catalog."default",
								    umlptareaname character varying(128) COLLATE pg_catalog."default",
								    umlpttername character varying(128) COLLATE pg_catalog."default",
								    ukrsubtest character varying(64) COLLATE pg_catalog."default",
								    ukrsubteststatus character varying(64) COLLATE pg_catalog."default",
								    ukrsubball100 integer,
								    ukrsubball12 integer,
								    ukrsubptname character varying(255) COLLATE pg_catalog."default",
								    ukrsubptregname character varying(128) COLLATE pg_catalog."default",
								    ukrsubptareaname character varying(128) COLLATE pg_catalog."default",
								    ukrsubpttername character varying(128) COLLATE pg_catalog."default",								    
								    ukrtest character varying(64) COLLATE pg_catalog."default",
								    ukrteststatus character varying(64) COLLATE pg_catalog."default",
								    ukrball100 integer,
								    ukrball12 integer,
								    ukrptname character varying(255) COLLATE pg_catalog."default",
								    ukrptregname character varying(128) COLLATE pg_catalog."default",
								    ukrptareaname character varying(128) COLLATE pg_catalog."default",
								    ukrpttername character varying(128) COLLATE pg_catalog."default",
								    histtest character varying(128) COLLATE pg_catalog."default",
								    histlang character varying(128) COLLATE pg_catalog."default",
								    histteststatus character varying(128) COLLATE pg_catalog."default",
								    histball100 integer,
								    histball12 integer,
								    histptname character varying(255) COLLATE pg_catalog."default",
								    histptregname character varying(128) COLLATE pg_catalog."default",
								    histptareaname character varying(128) COLLATE pg_catalog."default",
								    histpttername character varying(128) COLLATE pg_catalog."default",
								    mathtest character varying(128) COLLATE pg_catalog."default",
								    mathlang character varying(128) COLLATE pg_catalog."default",
								    mathteststatus character varying(128) COLLATE pg_catalog."default",
								    mathball100 integer,
								    mathball12 integer,
								    mathptname character varying(255) COLLATE pg_catalog."default",
								    mathptregname character varying(128) COLLATE pg_catalog."default",
								    mathptareaname character varying(128) COLLATE pg_catalog."default",
								    mathpttername character varying(128) COLLATE pg_catalog."default",
								    mathsttest character varying(128) COLLATE pg_catalog."default",
								    mathstlang character varying(128) COLLATE pg_catalog."default",
								    mathstteststatus character varying(128) COLLATE pg_catalog."default",
								    mathstball12 integer,
								    mathstball integer,
								    mathstptname character varying(255) COLLATE pg_catalog."default",
								    mathstptregname character varying(128) COLLATE pg_catalog."default",
								    mathstptareaname character varying(128) COLLATE pg_catalog."default",
								    mathstpttername character varying(128) COLLATE pg_catalog."default",
								    phystest character varying(128) COLLATE pg_catalog."default",
								    physlang character varying(128) COLLATE pg_catalog."default",
								    physteststatus character varying(128) COLLATE pg_catalog."default",
								    physball100 integer,
								    physptname character varying(255) COLLATE pg_catalog."default",
								    physptregname character varying(128) COLLATE pg_catalog."default",
								    physptareaname character varying(128) COLLATE pg_catalog."default",
								    physpttername character varying(128) COLLATE pg_catalog."default",
								    chemtest character varying(128) COLLATE pg_catalog."default",
								    chemlang character varying(128) COLLATE pg_catalog."default",
								    chemteststatus character varying(128) COLLATE pg_catalog."default",
								    chemball100 integer,
								    chemptname character varying(255) COLLATE pg_catalog."default",
								    chemptregname character varying(128) COLLATE pg_catalog."default",
								    chemptareaname character varying(128) COLLATE pg_catalog."default",
								    chempttername character varying(128) COLLATE pg_catalog."default",
								    biotest character varying(128) COLLATE pg_catalog."default",
								    biolang character varying(128) COLLATE pg_catalog."default",
								    bioteststatus character varying(128) COLLATE pg_catalog."default",
								    bioball100 integer,
								    bioptname character varying(255) COLLATE pg_catalog."default",
								    bioptregname character varying(128) COLLATE pg_catalog."default",
								    bioptareaname character varying(128) COLLATE pg_catalog."default",
								    biopttername character varying(128) COLLATE pg_catalog."default",
								    geotest character varying(128) COLLATE pg_catalog."default",
								    geolang character varying(128) COLLATE pg_catalog."default",
								    geoteststatus character varying(128) COLLATE pg_catalog."default",
								    geoball100 integer,
								    geoptname character varying(255) COLLATE pg_catalog."default",
								    geoptregname character varying(128) COLLATE pg_catalog."default",
								    geoptareaname character varying(128) COLLATE pg_catalog."default",
								    geopttername character varying(128) COLLATE pg_catalog."default",
								    engtest character varying(128) COLLATE pg_catalog."default",
								    engteststatus character varying(128) COLLATE pg_catalog."default",
								    engball100 integer,
								    engptname character varying(255) COLLATE pg_catalog."default",
								    engptregname character varying(128) COLLATE pg_catalog."default",
								    engptareaname character varying(128) COLLATE pg_catalog."default",
								    engpttername character varying(128) COLLATE pg_catalog."default",
								    frtest character varying(128) COLLATE pg_catalog."default",
								    frteststatus character varying(128) COLLATE pg_catalog."default",
								    frball100 integer,
								    frptname character varying(255) COLLATE pg_catalog."default",
								    frptregname character varying(128) COLLATE pg_catalog."default",
								    frptareaname character varying(128) COLLATE pg_catalog."default",
								    frpttername character varying(128) COLLATE pg_catalog."default",
								    deutest character varying(128) COLLATE pg_catalog."default",
								    deuteststatus character varying(128) COLLATE pg_catalog."default",
								    deuball100 integer,
								    deuptname character varying(255) COLLATE pg_catalog."default",
								    deuptregname character varying(128) COLLATE pg_catalog."default",
								    deuptareaname character varying(128) COLLATE pg_catalog."default",
								    deupttername character varying(128) COLLATE pg_catalog."default",
								    sptest character varying(128) COLLATE pg_catalog."default",
								    spteststatus character varying(128) COLLATE pg_catalog."default",
								    spball100 integer,
								    spptname character varying(255) COLLATE pg_catalog."default",
								    spptregname character varying(128) COLLATE pg_catalog."default",
								    spptareaname character varying(128) COLLATE pg_catalog."default",
								    sppttername character varying(128) COLLATE pg_catalog."default",
								    rustest character varying(128) COLLATE pg_catalog."default",
								    rusteststatus character varying(128) COLLATE pg_catalog."default",
								    rusball100 integer,
								    rusptname character varying(255) COLLATE pg_catalog."default",
								    rusptregname character varying(128) COLLATE pg_catalog."default",
								    rusptareaname character varying(128) COLLATE pg_catalog."default",
								    ruspttername character varying(128) COLLATE pg_catalog."default",
								    stid character varying(128) COLLATE pg_catalog."default",
								    tertypename character varying(128) COLLATE pg_catalog."default",
								    classprofilename character varying(128) COLLATE pg_catalog."default",
								    classlangname character varying(128) COLLATE pg_catalog."default",
								    physball12 integer,
								    chemball12 integer,
								    bioball12 integer,
								    geoball12 integer,
								    engball12 integer,
								    fratest character varying(128) COLLATE pg_catalog."default",
								    frateststatus character varying(128) COLLATE pg_catalog."default",
								    fraball100 integer,
								    fraball12 integer,
								    fraptname character varying(255) COLLATE pg_catalog."default",
								    fraptregname character varying(128) COLLATE pg_catalog."default",
								    fraptareaname character varying(128) COLLATE pg_catalog."default",
								    frapttername character varying(128) COLLATE pg_catalog."default",
								    deuball12 integer,
								    spatest character varying(128) COLLATE pg_catalog."default",
								    spateststatus character varying(128) COLLATE pg_catalog."default",
								    spaball100 integer,
								    spaball12 integer,
								    spaptname character varying(255) COLLATE pg_catalog."default",
								    spaptregname character varying(128) COLLATE pg_catalog."default",
								    spaptareaname character varying(128) COLLATE pg_catalog."default",
								    spapttername character varying(128) COLLATE pg_catalog."default",
								    rusball12 integer,
								    ukrball integer,
								    histball integer,
								    mathball integer,
								    physball integer,
								    chemball integer,
								    bioball integer,
								    geoball integer,
								    engdpalevel character varying(64) COLLATE pg_catalog."default",
								    engball integer,
								    fradpalevel character varying(64) COLLATE pg_catalog."default",
								    fraball integer,
								    deudpalevel character varying(64) COLLATE pg_catalog."default",
								    deuball integer,
								    spadpalevel character varying(64) COLLATE pg_catalog."default",
								    mathdpalevel character varying(64) COLLATE pg_catalog."default",
								    spaball integer,
								    umlball integer,
								    ukrsubball integer,
								    ukradaptscale integer,
								    umladaptscale integer,
								    ukrsubadaptscale integer,
								    year integer,
								    CONSTRAINT zno_results_pkey PRIMARY KEY (outid)
								)'''
		cur.execute(create_table_query)

		create_table_query = '''CREATE TABLE IF NOT EXISTS public.processed_rows
								(
									year integer NOT NULL,
									num_of_rows integer,
									CONSTRAINT processed_rows_pkey PRIMARY KEY (year)
								)'''
		cur.execute(create_table_query)

conn.close()